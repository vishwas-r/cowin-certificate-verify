{"ast":null,"code":"var monthNames=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];export function formatDate(givenDate){var dob=new Date(givenDate);var day=dob.getDate().toLocaleString('en-US',{minimumIntegerDigits:2,useGrouping:false});var monthName=monthNames[dob.getMonth()];var year=dob.getFullYear();return\"\".concat(day,\"-\").concat(monthName,\"-\").concat(year);}export var CertificateDetailsPaths={\"Name\":{path:[\"credentialSubject\",\"name\"],format:function format(data){return data;}},\"Age\":{path:[\"credentialSubject\",\"age\"],format:function format(data){return data;}},\"DOB\":{path:[\"credentialSubject\",\"dob\"],format:function format(data){return data;},optional:true},\"Gender\":{path:[\"credentialSubject\",\"gender\"],format:function format(data){return data;}},\"Certificate ID\":{path:[\"evidence\",\"0\",\"certificateId\"],format:function format(data){return data;}},\"Beneficiary ID\":{path:[\"credentialSubject\",\"refId\"],format:function format(data){return data;}},\"Vaccine Name\":{path:[\"evidence\",\"0\",\"vaccine\"],format:function format(data){return data;}},\"Vaccine Type\":{path:[\"evidence\",\"0\",\"prophylaxis\"],format:function format(data){return data;},optional:true},\"Date of ${dose} Dose\":{path:[\"evidence\",\"0\",\"effectiveStart\"],format:function format(data){return formatDate(data);}},\"Vaccination Status\":{path:[\"evidence\",\"0\"],format:function format(data){if(data.dose!==data.totalDoses){return\"Partially Vaccinated\";}else{return\"Fully Vaccinated\";}}},\"Vaccination at\":{path:[\"evidence\",\"0\",\"facility\",\"name\"],format:function format(data){return data;}},\"Country of Vaccination\":{path:[\"evidence\",\"0\",\"facility\",\"address\",\"addressCountry\"],format:function format(data){return data;},optional:true}};","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/src/constants.js"],"names":["monthNames","formatDate","givenDate","dob","Date","day","getDate","toLocaleString","minimumIntegerDigits","useGrouping","monthName","getMonth","year","getFullYear","CertificateDetailsPaths","path","format","data","optional","dose","totalDoses"],"mappings":"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","sourcesContent":["const monthNames = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\",\n    \"May\", \"Jun\", \"Jul\", \"Aug\",\n    \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n];\n\nexport function formatDate(givenDate) {\n    const dob = new Date(givenDate);\n    let day = (dob.getDate()).toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false});\n    let monthName = monthNames[dob.getMonth()];\n    let year = dob.getFullYear();\n\n    return `${day}-${monthName}-${year}`;\n}\n\nexport const CertificateDetailsPaths = {\n    \"Name\": {\n        path: [\"credentialSubject\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Age\": {\n        path: [\"credentialSubject\", \"age\"],\n        format: (data) => (data)\n    },\n    \"DOB\": {\n        path: [\"credentialSubject\", \"dob\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Gender\": {\n        path: [\"credentialSubject\", \"gender\"],\n        format: (data) => (data)\n    },\n    \"Certificate ID\": {\n        path: [\"evidence\", \"0\", \"certificateId\"],\n        format: (data) => (data)\n    },\n    \"Beneficiary ID\": {\n        path: [\"credentialSubject\", \"refId\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Name\": {\n        path: [\"evidence\", \"0\", \"vaccine\"],\n        format: (data) => (data)\n    },\n    \"Vaccine Type\": {\n        path: [\"evidence\", \"0\", \"prophylaxis\"],\n        format: (data) => (data),\n        optional: true\n    },\n    \"Date of ${dose} Dose\": {\n        path: [\"evidence\", \"0\", \"effectiveStart\"],\n        format: (data) => (formatDate(data))\n    },\n    \"Vaccination Status\": {\n        path: [\"evidence\", \"0\"],\n        format: (data) => {\n            if (data.dose !== data.totalDoses) {\n                return \"Partially Vaccinated\"\n            } else {\n                return \"Fully Vaccinated\"\n            }\n        }\n    },\n    \"Vaccination at\": {\n        path: [\"evidence\", \"0\", \"facility\", \"name\"],\n        format: (data) => (data)\n    },\n    \"Country of Vaccination\": {\n        path: [\"evidence\", \"0\", \"facility\", \"address\", \"addressCountry\"],\n        format: (data) => (data),\n        optional: true\n    }\n};\n"]},"metadata":{},"sourceType":"module"}