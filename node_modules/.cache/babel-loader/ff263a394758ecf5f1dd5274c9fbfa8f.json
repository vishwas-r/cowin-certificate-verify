{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scanImageData = exports.scanRGBABuffer = exports.scanGrayBuffer = exports.getDefaultScanner = void 0;\n\nvar Image_1 = require(\"./Image\");\n\nvar ImageScanner_1 = require(\"./ImageScanner\");\n\nvar defaultScannerPromise = ImageScanner_1.ImageScanner.create();\nexports.getDefaultScanner = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return defaultScannerPromise;\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar scanImage = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(image, scanner) {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(scanner === undefined)) {\n              _context2.next = 4;\n              break;\n            }\n\n            _context2.next = 3;\n            return defaultScannerPromise;\n\n          case 3:\n            scanner = _context2.sent;\n\n          case 4:\n            res = scanner.scan(image);\n\n            if (!(res < 0)) {\n              _context2.next = 7;\n              break;\n            }\n\n            throw Error('Scan Failed');\n\n          case 7:\n            if (!(res === 0)) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", []);\n\n          case 9:\n            return _context2.abrupt(\"return\", image.getSymbols());\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function scanImage(_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.scanGrayBuffer = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(buffer, width, height, scanner) {\n    var image, res;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return Image_1.Image.createFromGrayBuffer(width, height, buffer);\n\n          case 2:\n            image = _context3.sent;\n            _context3.next = 5;\n            return scanImage(image, scanner);\n\n          case 5:\n            res = _context3.sent;\n            image.destroy();\n            return _context3.abrupt(\"return\", res);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4, _x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.scanRGBABuffer = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(buffer, width, height, scanner) {\n    var image, res;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return Image_1.Image.createFromRGBABuffer(width, height, buffer);\n\n          case 2:\n            image = _context4.sent;\n            _context4.next = 5;\n            return scanImage(image, scanner);\n\n          case 5:\n            res = _context4.sent;\n            image.destroy();\n            return _context4.abrupt(\"return\", res);\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8, _x9, _x10) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexports.scanImageData = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(image, scanner) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return exports.scanRGBABuffer(image.data.buffer, image.width, image.height, scanner);\n\n          case 2:\n            return _context5.abrupt(\"return\", _context5.sent);\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["../src/module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAGA,IAAM,qBAAqB,GAAG,cAAA,CAAA,YAAA,CAAa,MAAb,EAA9B;AACa,OAAA,CAAA,iBAAA,yEAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAClB,qBADkB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAIb,IAAM,SAAS;AAAA,uEAAG,kBAChB,KADgB,EAEhB,OAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIZ,OAAO,KAAK,SAJA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKE,qBALF;;AAAA;AAKd,YAAA,OALc;;AAAA;AAOV,YAAA,GAPU,GAOJ,OAAO,CAAC,IAAR,CAAa,KAAb,CAPI;;AAAA,kBAQZ,GAAG,GAAG,CARM;AAAA;AAAA;AAAA;;AAAA,kBASR,KAAK,CAAC,aAAD,CATG;;AAAA;AAAA,kBAWZ,GAAG,KAAK,CAXI;AAAA;AAAA;AAAA;;AAAA,8CAWM,EAXN;;AAAA;AAAA,8CAYT,KAAK,CAAC,UAAN,EAZS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAT,SAAS;AAAA;AAAA;AAAA,GAAf;;AAea,OAAA,CAAA,cAAA;AAAA,uEAAiB,kBAC5B,MAD4B,EAE5B,KAF4B,EAG5B,MAH4B,EAI5B,OAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMR,OAAA,CAAA,KAAA,CAAM,oBAAN,CAA2B,KAA3B,EAAkC,MAAlC,EAA0C,MAA1C,CANQ;;AAAA;AAMtB,YAAA,KANsB;AAAA;AAAA,mBAOV,SAAS,CAAC,KAAD,EAAQ,OAAR,CAPC;;AAAA;AAOtB,YAAA,GAPsB;AAQ5B,YAAA,KAAK,CAAC,OAAN;AAR4B,8CASrB,GATqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAYA,OAAA,CAAA,cAAA;AAAA,uEAAiB,kBAC5B,MAD4B,EAE5B,KAF4B,EAG5B,MAH4B,EAI5B,OAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMR,OAAA,CAAA,KAAA,CAAM,oBAAN,CAA2B,KAA3B,EAAkC,MAAlC,EAA0C,MAA1C,CANQ;;AAAA;AAMtB,YAAA,KANsB;AAAA;AAAA,mBAOV,SAAS,CAAC,KAAD,EAAQ,OAAR,CAPC;;AAAA;AAOtB,YAAA,GAPsB;AAQ5B,YAAA,KAAK,CAAC,OAAN;AAR4B,8CASrB,GATqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAYA,OAAA,CAAA,aAAA;AAAA,uEAAgB,kBAC3B,KAD2B,EAE3B,OAF2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAId,OAAA,CAAA,cAAA,CACX,KAAK,CAAC,IAAN,CAAW,MADA,EAEX,KAAK,CAAC,KAFK,EAGX,KAAK,CAAC,MAHK,EAIX,OAJW,CAJc;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scanImageData = exports.scanRGBABuffer = exports.scanGrayBuffer = exports.getDefaultScanner = void 0;\nconst Image_1 = require(\"./Image\");\nconst ImageScanner_1 = require(\"./ImageScanner\");\nconst defaultScannerPromise = ImageScanner_1.ImageScanner.create();\nexports.getDefaultScanner = async () => {\n    return await defaultScannerPromise;\n};\nconst scanImage = async (image, scanner) => {\n    if (scanner === undefined) {\n        scanner = await defaultScannerPromise;\n    }\n    const res = scanner.scan(image);\n    if (res < 0) {\n        throw Error('Scan Failed');\n    }\n    if (res === 0)\n        return [];\n    return image.getSymbols();\n};\nexports.scanGrayBuffer = async (buffer, width, height, scanner) => {\n    const image = await Image_1.Image.createFromGrayBuffer(width, height, buffer);\n    const res = await scanImage(image, scanner);\n    image.destroy();\n    return res;\n};\nexports.scanRGBABuffer = async (buffer, width, height, scanner) => {\n    const image = await Image_1.Image.createFromRGBABuffer(width, height, buffer);\n    const res = await scanImage(image, scanner);\n    image.destroy();\n    return res;\n};\nexports.scanImageData = async (image, scanner) => {\n    return await exports.scanRGBABuffer(image.data.buffer, image.width, image.height, scanner);\n};\n//# sourceMappingURL=module.js.map"]},"metadata":{},"sourceType":"script"}