{"ast":null,"code":"/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nvar _require = require('./graphTypes'),\n    _isSubjectReference = _require.isSubjectReference;\n\nvar _require2 = require('./nodeMap'),\n    _createMergedNodeMap = _require2.createMergedNodeMap;\n\nvar api = {};\nmodule.exports = api;\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\n\napi.flatten = function (input) {\n  var defaultGraph = _createMergedNodeMap(input); // produce flattened output\n\n\n  var flattened = [];\n  var keys = Object.keys(defaultGraph).sort();\n\n  for (var ki = 0; ki < keys.length; ++ki) {\n    var node = defaultGraph[keys[ki]]; // only add full subjects to top-level\n\n    if (!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  return flattened;\n};","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/node_modules/jsonld/lib/flatten.js"],"names":["require","_isSubjectReference","isSubjectReference","_createMergedNodeMap","createMergedNodeMap","api","module","exports","flatten","input","defaultGraph","flattened","keys","Object","sort","ki","length","node","push"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,eAEIA,OAAO,CAAC,cAAD,CAFX;AAAA,IACsBC,mBADtB,YACEC,kBADF;;AAIA,gBAEIF,OAAO,CAAC,WAAD,CAFX;AAAA,IACuBG,oBADvB,aACEC,mBADF;;AAIA,IAAMC,GAAG,GAAG,EAAZ;AACAC,MAAM,CAACC,OAAP,GAAiBF,GAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,GAAG,CAACG,OAAJ,GAAc,UAAAC,KAAK,EAAI;AACrB,MAAMC,YAAY,GAAGP,oBAAoB,CAACM,KAAD,CAAzC,CADqB,CAGrB;;;AACA,MAAME,SAAS,GAAG,EAAlB;AACA,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,YAAZ,EAA0BI,IAA1B,EAAb;;AACA,OAAI,IAAIC,EAAE,GAAG,CAAb,EAAgBA,EAAE,GAAGH,IAAI,CAACI,MAA1B,EAAkC,EAAED,EAApC,EAAwC;AACtC,QAAME,IAAI,GAAGP,YAAY,CAACE,IAAI,CAACG,EAAD,CAAL,CAAzB,CADsC,CAEtC;;AACA,QAAG,CAACd,mBAAmB,CAACgB,IAAD,CAAvB,EAA+B;AAC7BN,MAAAA,SAAS,CAACO,IAAV,CAAeD,IAAf;AACD;AACF;;AACD,SAAON,SAAP;AACD,CAdD","sourcesContent":["/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n"]},"metadata":{},"sourceType":"script"}