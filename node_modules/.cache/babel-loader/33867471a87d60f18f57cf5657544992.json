{"ast":null,"code":"/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nvar _classCallCheck = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nmodule.exports = function (jsonld) {\n  var JsonLdProcessor = /*#__PURE__*/function () {\n    function JsonLdProcessor() {\n      _classCallCheck(this, JsonLdProcessor);\n    }\n\n    _createClass(JsonLdProcessor, [{\n      key: \"toString\",\n      value: function toString() {\n        return '[object JsonLdProcessor]';\n      }\n    }]);\n\n    return JsonLdProcessor;\n  }();\n\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  }); // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function (input, ctx) {\n    if (arguments.length < 2) {\n      return Promise.reject(new TypeError('Could not compact, too few arguments.'));\n    }\n\n    return jsonld.compact(input, ctx);\n  };\n\n  JsonLdProcessor.expand = function (input) {\n    if (arguments.length < 1) {\n      return Promise.reject(new TypeError('Could not expand, too few arguments.'));\n    }\n\n    return jsonld.expand(input);\n  };\n\n  JsonLdProcessor.flatten = function (input) {\n    if (arguments.length < 1) {\n      return Promise.reject(new TypeError('Could not flatten, too few arguments.'));\n    }\n\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/node_modules/jsonld/lib/JsonLdProcessor.js"],"names":["module","exports","jsonld","JsonLdProcessor","Object","defineProperty","writable","enumerable","prototype","configurable","value","compact","input","ctx","arguments","length","Promise","reject","TypeError","expand","flatten"],"mappings":"AAAA;AACA;AACA;AACA;;;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,MAAM,EAAI;AAAA,MACnBC,eADmB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,aAEvB,oBAAW;AACT,eAAO,0BAAP;AACD;AAJsB;;AAAA;AAAA;;AAMzBC,EAAAA,MAAM,CAACC,cAAP,CAAsBF,eAAtB,EAAuC,WAAvC,EAAoD;AAClDG,IAAAA,QAAQ,EAAE,KADwC;AAElDC,IAAAA,UAAU,EAAE;AAFsC,GAApD;AAIAH,EAAAA,MAAM,CAACC,cAAP,CAAsBF,eAAe,CAACK,SAAtC,EAAiD,aAAjD,EAAgE;AAC9DF,IAAAA,QAAQ,EAAE,IADoD;AAE9DC,IAAAA,UAAU,EAAE,KAFkD;AAG9DE,IAAAA,YAAY,EAAE,IAHgD;AAI9DC,IAAAA,KAAK,EAAEP;AAJuD,GAAhE,EAVyB,CAiBzB;AACA;AACA;AACA;AACA;;AAEAA,EAAAA,eAAe,CAACQ,OAAhB,GAA0B,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AAC7C,QAAGC,SAAS,CAACC,MAAV,GAAmB,CAAtB,EAAyB;AACvB,aAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,SAAJ,CAAc,uCAAd,CADK,CAAP;AAED;;AACD,WAAOhB,MAAM,CAACS,OAAP,CAAeC,KAAf,EAAsBC,GAAtB,CAAP;AACD,GAND;;AAOAV,EAAAA,eAAe,CAACgB,MAAhB,GAAyB,UAASP,KAAT,EAAgB;AACvC,QAAGE,SAAS,CAACC,MAAV,GAAmB,CAAtB,EAAyB;AACvB,aAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,SAAJ,CAAc,sCAAd,CADK,CAAP;AAED;;AACD,WAAOhB,MAAM,CAACiB,MAAP,CAAcP,KAAd,CAAP;AACD,GAND;;AAOAT,EAAAA,eAAe,CAACiB,OAAhB,GAA0B,UAASR,KAAT,EAAgB;AACxC,QAAGE,SAAS,CAACC,MAAV,GAAmB,CAAtB,EAAyB;AACvB,aAAOC,OAAO,CAACC,MAAR,CACL,IAAIC,SAAJ,CAAc,uCAAd,CADK,CAAP;AAED;;AACD,WAAOhB,MAAM,CAACkB,OAAP,CAAeR,KAAf,CAAP;AACD,GAND;;AAQA,SAAOT,eAAP;AACD,CA9CD","sourcesContent":["/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n"]},"metadata":{},"sourceType":"script"}