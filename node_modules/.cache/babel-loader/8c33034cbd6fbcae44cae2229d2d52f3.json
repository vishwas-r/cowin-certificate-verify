{"ast":null,"code":"/*\n * Copyright (c) 2018-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = {\n  Ed25519KeyPair: require('./Ed25519KeyPair'),\n  LDKeyPair: require('./LDKeyPair'),\n  RSAKeyPair: require('./RSAKeyPair')\n};\n/**\n * [JSON Web encryption]{@link https://tools.ietf.org/html/rfc7516}\n * @typedef {Object} JWE\n * @property {string} unprotected - A header for the jwe.\n * @property {string} iv - A base64 url.\n * @property {string} ciphertext - A base64 url.\n * @property {string} tag - A base64 url.\n */\n\n/**\n * PSS Object\n * @typedef {Object} PSS\n * @property encode {Function}\n * @property verify {Function}\n */\n\n/**\n * KeyPair Options.\n * @typedef {Object} KeyPairOptions\n * @property {string} passphrase - For encrypting the private key.\n * @property {string} id - Key Id.\n * @property {string} controller -\n * DID of the person/entity controlling this key.\n * @property {string} owner - DID or URI of owner. DEPRECATED, use\n *  `controller` instead.\n */\n\n/**\n * Serialized LD Key.\n * @typedef {Object} SerializedLdKey\n * @property {Ed25519VerificationKey2018|RsaVerificationKey2018}\n * type - The Encryption type.\n * @property {string} passphrase - The passphrase to generate the pair.\n */","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/node_modules/crypto-ld/lib/index.js"],"names":["module","exports","Ed25519KeyPair","require","LDKeyPair","RSAKeyPair"],"mappings":"AAAA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cAAc,EAAEC,OAAO,CAAC,kBAAD,CADR;AAEfC,EAAAA,SAAS,EAAED,OAAO,CAAC,aAAD,CAFH;AAGfE,EAAAA,UAAU,EAAEF,OAAO,CAAC,cAAD;AAHJ,CAAjB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*\n * Copyright (c) 2018-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = {\n  Ed25519KeyPair: require('./Ed25519KeyPair'),\n  LDKeyPair: require('./LDKeyPair'),\n  RSAKeyPair: require('./RSAKeyPair'),\n};\n\n/**\n * [JSON Web encryption]{@link https://tools.ietf.org/html/rfc7516}\n * @typedef {Object} JWE\n * @property {string} unprotected - A header for the jwe.\n * @property {string} iv - A base64 url.\n * @property {string} ciphertext - A base64 url.\n * @property {string} tag - A base64 url.\n */\n\n/**\n * PSS Object\n * @typedef {Object} PSS\n * @property encode {Function}\n * @property verify {Function}\n */\n\n/**\n * KeyPair Options.\n * @typedef {Object} KeyPairOptions\n * @property {string} passphrase - For encrypting the private key.\n * @property {string} id - Key Id.\n * @property {string} controller -\n * DID of the person/entity controlling this key.\n * @property {string} owner - DID or URI of owner. DEPRECATED, use\n *  `controller` instead.\n */\n\n/**\n * Serialized LD Key.\n * @typedef {Object} SerializedLdKey\n * @property {Ed25519VerificationKey2018|RsaVerificationKey2018}\n * type - The Encryption type.\n * @property {string} passphrase - The passphrase to generate the pair.\n */\n"]},"metadata":{},"sourceType":"script"}