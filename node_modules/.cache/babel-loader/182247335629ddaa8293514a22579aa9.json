{"ast":null,"code":"import _regeneratorRuntime from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import'./index.css';import{scanImageData}from\"zbar.wasm\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SCAN_PERIOD_MS=100;function hasGetUserMedia(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia);}var QRScanner=/*#__PURE__*/function(_Component){_inherits(QRScanner,_Component);var _super=_createSuper(QRScanner);function QRScanner(props){var _this;_classCallCheck(this,QRScanner);_this=_super.call(this,props);_this.scanBarcode=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var canvas,ctx,data,symbols,i,sym;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:canvas=document.createElement('canvas');canvas.width=_this.props.width;canvas.height=_this.props.height;ctx=canvas.getContext('2d');ctx.drawImage(_this.video,0,0,_this.props.width,_this.props.height);data=ctx.getImageData(0,0,canvas.width,canvas.height);_context.next=8;return scanImageData(data);case 8:symbols=_context.sent;scanImageData(data);// console.log(symbols, Date.now());\nfor(i=0;i<symbols.length;++i){sym=symbols[i];_this.props.onScan(sym.decode());}case 11:case\"end\":return _context.stop();}}},_callee);}));_this.state={hasUserMedia:false};return _this;}_createClass(QRScanner,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(!hasGetUserMedia())return;QRScanner.mountedInstances.push(this);if(!this.state.hasUserMedia&&!QRScanner.userMediaRequested){this.requestUserMedia();}QRScanner.scanTimer=setInterval(function(){_this2.scanBarcode();},SCAN_PERIOD_MS);}},{key:\"componentWillUpdate\",value:function componentWillUpdate(nextProps){if(JSON.stringify(nextProps.videoConstraints)!==JSON.stringify(this.props.videoConstraints)){this.requestUserMedia();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(QRScanner.scanTimer);var index=QRScanner.mountedInstances.indexOf(this);QRScanner.mountedInstances.splice(index,1);QRScanner.userMediaRequested=false;if(QRScanner.mountedInstances.length===0&&this.state.hasUserMedia){if(this.stream.getVideoTracks&&this.stream.getAudioTracks){this.stream.getVideoTracks().map(function(track){return track.stop();});}else{this.stream.stop();}window.URL.revokeObjectURL(this.state.src);}}},{key:\"requestUserMedia\",value:function requestUserMedia(){var _this3=this;navigator.getUserMedia=navigator.mediaDevices.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;var sourceSelected=function sourceSelected(videoConstraints){var constraints={video:videoConstraints||true};navigator.mediaDevices.getUserMedia(constraints).then(function(stream){QRScanner.mountedInstances.forEach(function(instance){return instance.handleUserMedia(null,stream);});}).catch(function(e){QRScanner.mountedInstances.forEach(function(instance){return instance.handleUserMedia(e);});});};if('mediaDevices'in navigator){sourceSelected(this.props.videoConstraints);}else{var optionalSource=function optionalSource(id){return{optional:[{sourceId:id}]};};var constraintToSourceId=function constraintToSourceId(constraint){var deviceId=(constraint||{}).deviceId;if(typeof deviceId==='string'){return deviceId;}else if(Array.isArray(deviceId)&&deviceId.length>0){return deviceId[0];}else if(typeof deviceId==='object'&&deviceId.ideal){return deviceId.ideal;}return null;};MediaStreamTrack.getSources(function(sources){var videoSource=null;sources.forEach(function(source){if(source.kind==='video'){videoSource=source.id;}});var videoSourceId=constraintToSourceId(_this3.props.videoConstraints);if(videoSourceId){videoSource=videoSourceId;}sourceSelected(optionalSource(videoSource));});}QRScanner.userMediaRequested=true;}},{key:\"handleUserMedia\",value:function handleUserMedia(err,stream){if(err){this.setState({hasUserMedia:false});this.props.onError(err);return;}this.stream=stream;try{this.video.srcObject=stream;this.setState({hasUserMedia:true});}catch(error){this.setState({hasUserMedia:true,src:window.URL.createObjectURL(stream)});}}},{key:\"render\",value:function render(){var _this4=this;return/*#__PURE__*/_jsxs(\"div\",{id:\"videoview\",children:[/*#__PURE__*/_jsx(\"video\",{autoPlay:true,width:\"100%\",src:this.state.src,className:this.props.className,playsInline:true,style:this.props.style,ref:function ref(_ref2){_this4.video=_ref2;}}),/*#__PURE__*/_jsx(\"canvas\",{id:\"overlay\",width:this.props.width,height:this.props.height})]});}}]);return QRScanner;}(Component);QRScanner.defaultProps={className:'',height:1000,width:1000,videoConstraints:{facingMode:\"environment\"}};QRScanner.mountedInstances=[];QRScanner.userMediaRequested=false;QRScanner.scanTimer=null;export{QRScanner as default};","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/src/components/QRScanner/index.js"],"names":["React","Component","scanImageData","SCAN_PERIOD_MS","hasGetUserMedia","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","QRScanner","props","scanBarcode","canvas","document","createElement","width","height","ctx","getContext","drawImage","video","data","getImageData","symbols","i","length","sym","onScan","decode","state","hasUserMedia","mountedInstances","push","userMediaRequested","requestUserMedia","scanTimer","setInterval","nextProps","JSON","stringify","videoConstraints","clearInterval","index","indexOf","splice","stream","getVideoTracks","getAudioTracks","map","track","stop","window","URL","revokeObjectURL","src","sourceSelected","constraints","then","forEach","instance","handleUserMedia","catch","e","optionalSource","id","optional","sourceId","constraintToSourceId","constraint","deviceId","Array","isArray","ideal","MediaStreamTrack","getSources","sources","videoSource","source","kind","videoSourceId","err","setState","onError","srcObject","error","createObjectURL","className","style","ref","defaultProps","facingMode"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './index.css';\nimport {scanImageData} from \"zbar.wasm\";\n\nconst SCAN_PERIOD_MS = 100;\n\nfunction hasGetUserMedia() {\n    return !!(\n        (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia\n    );\n}\n\nexport default class QRScanner extends Component {\n    static defaultProps = {\n        className: '',\n        height: 1000,\n        width: 1000,\n        videoConstraints: {\n            facingMode: \"environment\"\n        }\n    };\n\n\n    static mountedInstances = [];\n\n    static userMediaRequested = false;\n\n    static scanTimer = null;\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasUserMedia: false,\n        };\n    }\n\n    componentDidMount() {\n        if (!hasGetUserMedia()) return;\n\n        QRScanner.mountedInstances.push(this);\n\n        if (!this.state.hasUserMedia && !QRScanner.userMediaRequested) {\n            this.requestUserMedia();\n        }\n        QRScanner.scanTimer = setInterval(() => {\n            this.scanBarcode();\n        }, SCAN_PERIOD_MS);\n\n\n    }\n\n    componentWillUpdate(nextProps) {\n        if (\n            JSON.stringify(nextProps.videoConstraints) !==\n            JSON.stringify(this.props.videoConstraints)\n        ) {\n            this.requestUserMedia();\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(QRScanner.scanTimer);\n        const index = QRScanner.mountedInstances.indexOf(this);\n        QRScanner.mountedInstances.splice(index, 1);\n\n        QRScanner.userMediaRequested = false;\n        if (QRScanner.mountedInstances.length === 0 && this.state.hasUserMedia) {\n            if (this.stream.getVideoTracks && this.stream.getAudioTracks) {\n                this.stream.getVideoTracks().map(track => track.stop());\n            } else {\n                this.stream.stop();\n            }\n            window.URL.revokeObjectURL(this.state.src);\n        }\n    }\n\n    scanBarcode = async () => {\n\n        let canvas = document.createElement('canvas');\n        canvas.width = this.props.width;\n        canvas.height = this.props.height\n        let ctx = canvas.getContext('2d');\n        ctx.drawImage(this.video, 0, 0, this.props.width, this.props.height);\n        let data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const symbols = await scanImageData(data);\n        scanImageData(data)\n        // console.log(symbols, Date.now());\n        for (let i = 0; i < symbols.length; ++i) {\n            const sym = symbols[i];\n\n            this.props.onScan(sym.decode())\n        }\n\n    }\n\n\n    requestUserMedia() {\n        navigator.getUserMedia =\n            navigator.mediaDevices.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia ||\n            navigator.msGetUserMedia;\n\n        const sourceSelected = (videoConstraints) => {\n            const constraints = {\n                video: videoConstraints || true,\n            };\n\n            navigator.mediaDevices\n                .getUserMedia(constraints)\n                .then((stream) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(null, stream),\n                    );\n                })\n                .catch((e) => {\n                    QRScanner.mountedInstances.forEach(instance =>\n                        instance.handleUserMedia(e),\n                    );\n                });\n        };\n\n        if ('mediaDevices' in navigator) {\n            sourceSelected(this.props.videoConstraints);\n        } else {\n            const optionalSource = id => ({optional: [{sourceId: id}]});\n\n            const constraintToSourceId = (constraint) => {\n                const deviceId = (constraint || {}).deviceId;\n\n                if (typeof deviceId === 'string') {\n                    return deviceId;\n                } else if (Array.isArray(deviceId) && deviceId.length > 0) {\n                    return deviceId[0];\n                } else if (typeof deviceId === 'object' && deviceId.ideal) {\n                    return deviceId.ideal;\n                }\n\n                return null;\n            };\n\n            MediaStreamTrack.getSources((sources) => {\n\n                let videoSource = null;\n\n                sources.forEach((source) => {\n                    if (source.kind === 'video') {\n                        videoSource = source.id;\n                    }\n                });\n\n\n                const videoSourceId = constraintToSourceId(this.props.videoConstraints);\n                if (videoSourceId) {\n                    videoSource = videoSourceId;\n                }\n\n                sourceSelected(\n                    optionalSource(videoSource),\n                );\n            });\n        }\n\n        QRScanner.userMediaRequested = true;\n    }\n\n    handleUserMedia(err, stream) {\n        if (err) {\n            this.setState({hasUserMedia: false});\n            this.props.onError(err);\n\n            return;\n        }\n\n        this.stream = stream;\n\n        try {\n            this.video.srcObject = stream;\n            this.setState({hasUserMedia: true});\n        } catch (error) {\n            this.setState({\n                hasUserMedia: true,\n                src: window.URL.createObjectURL(stream),\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div id='videoview'>\n                <video\n                    autoPlay\n                    width={\"100%\"}\n                    src={this.state.src}\n                    className={this.props.className}\n                    playsInline\n                    style={this.props.style}\n                    ref={(ref) => {\n                        this.video = ref;\n                    }}\n                />\n                <canvas id=\"overlay\" width={this.props.width} height={this.props.height}/>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}