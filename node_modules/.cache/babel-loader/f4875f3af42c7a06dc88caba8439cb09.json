{"ast":null,"code":"/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nvar _regeneratorRuntime = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nmodule.exports = /*#__PURE__*/function () {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  function RequestQueue() {\n    _classCallCheck(this, RequestQueue);\n\n    this._requests = {};\n  }\n\n  _createClass(RequestQueue, [{\n    key: \"wrapLoader\",\n    value: function wrapLoader(loader) {\n      var self = this;\n      self._loader = loader;\n      return function\n        /* url */\n      () {\n        return self.add.apply(self, arguments);\n      };\n    }\n  }, {\n    key: \"add\",\n    value: function () {\n      var _add = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n        var promise;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                promise = this._requests[url];\n\n                if (!promise) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", Promise.resolve(promise));\n\n              case 3:\n                // queue URL and load it\n                promise = this._requests[url] = this._loader(url);\n                _context.prev = 4;\n                _context.next = 7;\n                return promise;\n\n              case 7:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 8:\n                _context.prev = 8;\n                delete this._requests[url];\n                return _context.finish(8);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4,, 8, 11]]);\n      }));\n\n      function add(_x) {\n        return _add.apply(this, arguments);\n      }\n\n      return add;\n    }()\n  }]);\n\n  return RequestQueue;\n}();","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/node_modules/jsonld/lib/RequestQueue.js"],"names":["module","exports","_requests","loader","self","_loader","add","apply","arguments","url","promise","Promise","resolve"],"mappings":"AAAA;AACA;AACA;AACA;;;;;;;;;;AAEAA,MAAM,CAACC,OAAP;AACE;AACF;AACA;AACE,0BAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiB,EAAjB;AACD;;AANH;AAAA;AAAA,WAQE,oBAAWC,MAAX,EAAmB;AACjB,UAAMC,IAAI,GAAG,IAAb;AACAA,MAAAA,IAAI,CAACC,OAAL,GAAeF,MAAf;AACA,aAAO;AAAS;AAAT,SAAoB;AACzB,eAAOC,IAAI,CAACE,GAAL,CAASC,KAAT,CAAeH,IAAf,EAAqBI,SAArB,CAAP;AACD,OAFD;AAGD;AAdH;AAAA;AAAA;AAAA,0EAgBE,iBAAUC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACMC,gBAAAA,OADN,GACgB,KAAKR,SAAL,CAAeO,GAAf,CADhB;;AAAA,qBAEKC,OAFL;AAAA;AAAA;AAAA;;AAAA,iDAIWC,OAAO,CAACC,OAAR,CAAgBF,OAAhB,CAJX;;AAAA;AAOE;AACAA,gBAAAA,OAAO,GAAG,KAAKR,SAAL,CAAeO,GAAf,IAAsB,KAAKJ,OAAL,CAAaI,GAAb,CAAhC;AARF;AAAA;AAAA,uBAWiBC,OAXjB;;AAAA;AAAA;;AAAA;AAAA;AAaI,uBAAO,KAAKR,SAAL,CAAeO,GAAf,CAAP;AAbJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA","sourcesContent":["/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = loader;\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    let promise = this._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = this._requests[url] = this._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete this._requests[url];\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"script"}