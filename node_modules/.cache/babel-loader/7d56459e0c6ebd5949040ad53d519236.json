{"ast":null,"code":"/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nvar _regeneratorRuntime = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar api = {};\nmodule.exports = api; // define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n// capture the global reference to guard against fakeTimer mocks\n\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nvar _delay = _setImmediate ? // not a direct alias (for IE10 compatibility)\nfunction (fn) {\n  return _setImmediate(fn);\n} : function (fn) {\n  return setTimeout(fn, 0);\n};\n\nif (typeof process === 'object' && typeof process.nextTick === 'function') {\n  api.nextTick = process.nextTick;\n} else {\n  api.nextTick = _delay;\n}\n\napi.setImmediate = _setImmediate ? _delay : api.nextTick;\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\n\napi.clone = function (value) {\n  if (value && typeof value === 'object') {\n    var rval;\n\n    if (Array.isArray(value)) {\n      rval = [];\n\n      for (var i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if (api.isObject(value)) {\n      rval = {};\n\n      for (var key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n\n    return rval;\n  }\n\n  return value;\n};\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\n\n\napi.isObject = function (v) {\n  return Object.prototype.toString.call(v) === '[object Object]';\n};\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\n\n\napi.isUndefined = function (v) {\n  return typeof v === 'undefined';\n};\n\napi.callbackify = function (fn) {\n  return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _len,\n        args,\n        _key,\n        callback,\n        result,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = _args[_key];\n            }\n\n            callback = args[args.length - 1];\n\n            if (typeof callback === 'function') {\n              args.pop();\n            }\n\n            _context.prev = 3;\n            _context.next = 6;\n            return fn.apply(null, args);\n\n          case 6:\n            result = _context.sent;\n            _context.next = 14;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n\n            if (!(typeof callback === 'function')) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _invokeCallback(callback, _context.t0));\n\n          case 13:\n            throw _context.t0;\n\n          case 14:\n            if (!(typeof callback === 'function')) {\n              _context.next = 16;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _invokeCallback(callback, null, result));\n\n          case 16:\n            return _context.abrupt(\"return\", result);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 9]]);\n  }));\n};\n\nfunction _invokeCallback(callback, err, result) {\n  try {\n    return callback(err, result);\n  } catch (unhandledError) {\n    // throw unhandled errors to prevent \"unhandled rejected promise\"\n    // and simulate what would have happened in a promiseless API\n    process.nextTick(function () {\n      throw unhandledError;\n    });\n  }\n}","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/node_modules/rdf-canonize/lib/util.js"],"names":["api","module","exports","_setImmediate","setImmediate","_delay","fn","setTimeout","process","nextTick","clone","value","rval","Array","isArray","i","length","isObject","key","toString","v","Object","prototype","call","isUndefined","callbackify","args","callback","pop","apply","result","_invokeCallback","err","unhandledError"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n// define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n\n// capture the global reference to guard against fakeTimer mocks\nconst _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nconst _delay = _setImmediate ?\n  // not a direct alias (for IE10 compatibility)\n  fn => _setImmediate(fn) :\n  fn => setTimeout(fn, 0);\n\nif(typeof process === 'object' && typeof process.nextTick === 'function') {\n  api.nextTick = process.nextTick;\n} else {\n  api.nextTick = _delay;\n}\napi.setImmediate = _setImmediate ? _delay : api.nextTick;\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(Array.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(api.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n\napi.callbackify = fn => {\n  return async function(...args) {\n    const callback = args[args.length - 1];\n    if(typeof callback === 'function') {\n      args.pop();\n    }\n\n    let result;\n    try {\n      result = await fn.apply(null, args);\n    } catch(e) {\n      if(typeof callback === 'function') {\n        return _invokeCallback(callback, e);\n      }\n      throw e;\n    }\n\n    if(typeof callback === 'function') {\n      return _invokeCallback(callback, null, result);\n    }\n\n    return result;\n  };\n};\n\nfunction _invokeCallback(callback, err, result) {\n  try {\n    return callback(err, result);\n  } catch(unhandledError) {\n    // throw unhandled errors to prevent \"unhandled rejected promise\"\n    // and simulate what would have happened in a promiseless API\n    process.nextTick(() => {\n      throw unhandledError;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}