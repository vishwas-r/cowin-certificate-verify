{"ast":null,"code":"import _toConsumableArray from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:/My Works/Git/cowin-verify/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import axios from\"axios\";var EVENT_ACTION_TYPES={ADD_EVENT:\"ADD_EVENT\",REMOVE_EVENT:\"REMOVE_EVENT\"};export var EVENT_TYPES={CERTIFICATE_DOWNLOAD:\"certificate-download\",VALID_VERIFICATION:\"valid-verification\",INVALID_VERIFICATION:\"invalid-verification\",REVOKED_CERTIFICATE:\"revoked-certificate\"};var initialState={data:[]};export function eventsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case EVENT_ACTION_TYPES.ADD_EVENT:{return _objectSpread(_objectSpread({},state),{},{data:[].concat(_toConsumableArray(state.data),[_objectSpread({id:state.data.length},action.payload)])});}case EVENT_ACTION_TYPES.REMOVE_EVENT:{return _objectSpread(_objectSpread({},state),{},{data:state.data.filter(function(event){return!action.payload.includes(event.id);})});}default:return state;}}export var addEventAction=function addEventAction(event){return{type:EVENT_ACTION_TYPES.ADD_EVENT,payload:_objectSpread(_objectSpread({},event),{},{date:new Date().toISOString()})};};var removeEventsAction=function removeEventsAction(eventIds){return{type:EVENT_ACTION_TYPES.REMOVE_EVENT,payload:eventIds};};export var postEvents=function postEvents(_ref,dispatch){var data=_ref.data;if(data.length>0){try{axios.post(\"/divoc/api/v1/events/\",data).then(function(res){return dispatch(removeEventsAction(data.map(function(e){return e.id;})));}).catch(function(e){console.log(e);});}catch(e){console.log(e);}}};","map":{"version":3,"sources":["D:/My Works/Git/cowin-verify/src/redux/reducers/events.js"],"names":["axios","EVENT_ACTION_TYPES","ADD_EVENT","REMOVE_EVENT","EVENT_TYPES","CERTIFICATE_DOWNLOAD","VALID_VERIFICATION","INVALID_VERIFICATION","REVOKED_CERTIFICATE","initialState","data","eventsReducer","state","action","type","id","length","payload","filter","event","includes","addEventAction","date","Date","toISOString","removeEventsAction","eventIds","postEvents","dispatch","post","then","res","map","e","catch","console","log"],"mappings":"6SAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,CACvBC,SAAS,CAAE,WADY,CAEvBC,YAAY,CAAE,cAFS,CAA3B,CAIA,MAAO,IAAMC,CAAAA,WAAW,CAAG,CACvBC,oBAAoB,CAAE,sBADC,CAEvBC,kBAAkB,CAAE,oBAFG,CAGvBC,oBAAoB,CAAE,sBAHC,CAIvBC,mBAAmB,CAAE,qBAJE,CAApB,CAMP,GAAMC,CAAAA,YAAY,CAAG,CACjBC,IAAI,CAAE,EADW,CAArB,CAIA,MAAO,SAASC,CAAAA,aAAT,EAAqD,IAA9BC,CAAAA,KAA8B,2DAAtBH,YAAsB,IAARI,CAAAA,MAAQ,2CACxD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKb,CAAAA,kBAAkB,CAACC,SAAxB,CAAmC,CAC/B,sCACOU,KADP,MAEIF,IAAI,8BAAME,KAAK,CAACF,IAAZ,kBAAmBK,EAAE,CAAEH,KAAK,CAACF,IAAN,CAAWM,MAAlC,EAA6CH,MAAM,CAACI,OAApD,GAFR,GAKH,CACD,IAAKhB,CAAAA,kBAAkB,CAACE,YAAxB,CAAsC,CAClC,sCACOS,KADP,MAEIF,IAAI,CAAEE,KAAK,CAACF,IAAN,CAAWQ,MAAX,CAAkB,SAAAC,KAAK,QAAI,CAACN,MAAM,CAACI,OAAP,CAAeG,QAAf,CAAwBD,KAAK,CAACJ,EAA9B,CAAL,EAAvB,CAFV,GAKH,CACD,QACI,MAAOH,CAAAA,KAAP,CAhBR,CAkBH,CAED,MAAO,IAAMS,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACF,KAAD,CAAW,CACrC,MAAO,CACHL,IAAI,CAAEb,kBAAkB,CAACC,SADtB,CAEHe,OAAO,gCAAME,KAAN,MAAaG,IAAI,CAAE,GAAIC,CAAAA,IAAJ,GAAWC,WAAX,EAAnB,EAFJ,CAAP,CAIH,CALM,CAOP,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHZ,IAAI,CAAEb,kBAAkB,CAACE,YADtB,CAEHc,OAAO,CAAES,QAFN,CAAP,CAIH,CALD,CAOA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAASC,QAAT,CAAsB,IAApBlB,CAAAA,IAAoB,MAApBA,IAAoB,CAC5C,GAAIA,IAAI,CAACM,MAAL,CAAc,CAAlB,CAAqB,CACjB,GAAI,CACAhB,KAAK,CACF6B,IADH,CACQ,uBADR,CACiCnB,IADjC,EAEGoB,IAFH,CAEQ,SAACC,GAAD,CAAS,CACX,MAAOH,CAAAA,QAAQ,CAACH,kBAAkB,CAACf,IAAI,CAACsB,GAAL,CAAS,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAAClB,EAAN,EAAV,CAAD,CAAnB,CAAf,CACH,CAJH,EAIKmB,KAJL,CAIW,SAACD,CAAD,CAAO,CACdE,OAAO,CAACC,GAAR,CAAYH,CAAZ,EACH,CAND,EAOH,CAAC,MAAOA,CAAP,CAAU,CACRE,OAAO,CAACC,GAAR,CAAYH,CAAZ,EACH,CACJ,CACJ,CAdM","sourcesContent":["import axios from \"axios\";\n\nconst EVENT_ACTION_TYPES = {\n    ADD_EVENT: \"ADD_EVENT\",\n    REMOVE_EVENT: \"REMOVE_EVENT\"\n};\nexport const EVENT_TYPES = {\n    CERTIFICATE_DOWNLOAD: \"certificate-download\",\n    VALID_VERIFICATION: \"valid-verification\",\n    INVALID_VERIFICATION: \"invalid-verification\",\n    REVOKED_CERTIFICATE: \"revoked-certificate\",\n};\nconst initialState = {\n    data: [],\n};\n\nexport function eventsReducer(state = initialState, action) {\n    switch (action.type) {\n        case EVENT_ACTION_TYPES.ADD_EVENT: {\n            return {\n                ...state,\n                data: [...state.data, {id: state.data.length, ...action.payload}],\n\n            };\n        }\n        case EVENT_ACTION_TYPES.REMOVE_EVENT: {\n            return {\n                ...state,\n                data: state.data.filter(event => !action.payload.includes(event.id)),\n\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const addEventAction = (event) => {\n    return {\n        type: EVENT_ACTION_TYPES.ADD_EVENT,\n        payload: {...event, date: new Date().toISOString()}\n    }\n};\n\nconst removeEventsAction = (eventIds) => {\n    return {\n        type: EVENT_ACTION_TYPES.REMOVE_EVENT,\n        payload: eventIds\n    }\n};\n\nexport const postEvents = ({data}, dispatch) => {\n    if (data.length > 0) {\n        try {\n            axios\n              .post(\"/divoc/api/v1/events/\", data)\n              .then((res) => {\n                  return dispatch(removeEventsAction(data.map(e => e.id)));\n              }).catch((e) => {\n                console.log(e);\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}